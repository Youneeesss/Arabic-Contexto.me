{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\OneDrive\\\\Bureau\\\\Random Projects\\\\contexto-react\\\\src\\\\Guess.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guess({\n  word,\n  score\n}) {\n  // Calculate the width of the yellow bar based on the score\n  const widthPercentage = score / 10 * 100;\n\n  // Calculate the border color for the lowest score\n  const borderColor = score === 1 ? '#000' : 'transparent';\n\n  // Inline style for the yellow bar\n  const barStyle = {\n    width: `${widthPercentage}%`,\n    backgroundColor: 'yellow',\n    borderRight: `2px solid ${borderColor}` // Add border for the lowest score\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"guess-word\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"yellow-bar\",\n        style: barStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Guess;\nexport default Guess;\nvar _c;\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Guess","word","score","widthPercentage","borderColor","barStyle","width","backgroundColor","borderRight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/youne/OneDrive/Bureau/Random Projects/contexto-react/src/Guess.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Guess({ word, score }) {\r\n  // Calculate the width of the yellow bar based on the score\r\n  const widthPercentage = (score / 10) * 100;\r\n\r\n  // Calculate the border color for the lowest score\r\n  const borderColor = score === 1 ? '#000' : 'transparent';\r\n\r\n  // Inline style for the yellow bar\r\n  const barStyle = {\r\n    width: `${widthPercentage}%`,\r\n    backgroundColor: 'yellow',\r\n    borderRight: `2px solid ${borderColor}`, // Add border for the lowest score\r\n  };\r\n\r\n  return (\r\n    <div className=\"guess\">\r\n      <span className=\"guess-word\">{word}</span>\r\n      <div className=\"score-bar\">\r\n        <div className=\"yellow-bar\" style={barStyle}></div>\r\n        <span className=\"score\">{score}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Guess;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAC9B;EACA,MAAMC,eAAe,GAAID,KAAK,GAAG,EAAE,GAAI,GAAG;;EAE1C;EACA,MAAME,WAAW,GAAGF,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,aAAa;;EAExD;EACA,MAAMG,QAAQ,GAAG;IACfC,KAAK,EAAG,GAAEH,eAAgB,GAAE;IAC5BI,eAAe,EAAE,QAAQ;IACzBC,WAAW,EAAG,aAAYJ,WAAY,EAAC,CAAE;EAC3C,CAAC;EAED,oBACEL,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBX,OAAA;MAAMU,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAET;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1Cf,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBX,OAAA;QAAKU,SAAS,EAAC,YAAY;QAACM,KAAK,EAAEV;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDf,OAAA;QAAMU,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAER;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GAvBQhB,KAAK;AAyBd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}