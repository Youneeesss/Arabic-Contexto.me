{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\OneDrive\\\\Bureau\\\\Random Projects\\\\contexto-react\\\\src\\\\Guess.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guess({\n  word,\n  score,\n  allScores\n}) {\n  // Calculate the width of the yellow bar based on the score\n  const widthPercentage = (1 - score / 1000) * 100;\n\n  // Calculate the RGB values for the yellow color based on the score\n  const yellowColor = `rgba(255, 255, 0, 1)`;\n\n  // Inline style for the background color of the guess\n  const guessStyle = {\n    outline: 0,\n    margin: '10px 0',\n    padding: '15px',\n    boxSizing: 'border-box',\n    background: `linear-gradient(to right, ${yellowColor} ${widthPercentage}%, #fffbf5 ${widthPercentage}% 100%)`,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    border: score === getMinimumScore() ? \"1px solid #000\" : \"transparent\",\n    // Add border for the lowest score\n    borderRadius: \"3px\" // Add border radius for a smoother look\n  };\n\n  // Function to get the minimum score among all guesses\n  function getMinimumScore() {\n    return Math.min(...allScores);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess\",\n    style: guessStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"guess-word\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"score\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Guess;\nexport default Guess;\nvar _c;\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Guess","word","score","allScores","widthPercentage","yellowColor","guessStyle","outline","margin","padding","boxSizing","background","display","justifyContent","alignItems","border","getMinimumScore","borderRadius","Math","min","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/youne/OneDrive/Bureau/Random Projects/contexto-react/src/Guess.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Guess({ word, score, allScores }) {\r\n  // Calculate the width of the yellow bar based on the score\r\n  const widthPercentage = (1 - (score / 1000))* 100;\r\n\r\n  // Calculate the RGB values for the yellow color based on the score\r\n  const yellowColor = `rgba(255, 255, 0, 1)`;\r\n\r\n  // Inline style for the background color of the guess\r\n  const guessStyle = {\r\n    outline: 0,\r\n    margin: '10px 0',\r\n    padding: '15px',\r\n    boxSizing: 'border-box',\r\n    background: `linear-gradient(to right, ${yellowColor} ${widthPercentage}%, #fffbf5 ${widthPercentage}% 100%)`,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    border: score === getMinimumScore() ? \"1px solid #000\" : \"transparent\", // Add border for the lowest score\r\n    borderRadius: \"3px\", // Add border radius for a smoother look\r\n  };\r\n\r\n  // Function to get the minimum score among all guesses\r\n  function getMinimumScore() {\r\n    return Math.min(...allScores);\r\n  }\r\n\r\n  return (\r\n    <div className=\"guess\" style={guessStyle}>\r\n      <span className=\"guess-word\">{word}</span>\r\n      <span className=\"score\">{score}</span>\r\n    </div>\r\n  );\r\n}\r\nexport default Guess;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EACzC;EACA,MAAMC,eAAe,GAAG,CAAC,CAAC,GAAIF,KAAK,GAAG,IAAK,IAAG,GAAG;;EAEjD;EACA,MAAMG,WAAW,GAAI,sBAAqB;;EAE1C;EACA,MAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,YAAY;IACvBC,UAAU,EAAG,6BAA4BN,WAAY,IAAGD,eAAgB,cAAaA,eAAgB,SAAQ;IAC7GQ,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAEb,KAAK,KAAKc,eAAe,CAAC,CAAC,GAAG,gBAAgB,GAAG,aAAa;IAAE;IACxEC,YAAY,EAAE,KAAK,CAAE;EACvB,CAAC;;EAED;EACA,SAASD,eAAeA,CAAA,EAAG;IACzB,OAAOE,IAAI,CAACC,GAAG,CAAC,GAAGhB,SAAS,CAAC;EAC/B;EAEA,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAACC,KAAK,EAAEf,UAAW;IAAAgB,QAAA,gBACvCvB,OAAA;MAAMqB,SAAS,EAAC,YAAY;MAAAE,QAAA,EAAErB;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C3B,OAAA;MAAMqB,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACC,EAAA,GAhCQ3B,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}