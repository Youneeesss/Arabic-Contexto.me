{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\OneDrive\\\\Bureau\\\\Random Projects\\\\contexto-react\\\\src\\\\Guess.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guess({\n  word,\n  score\n}) {\n  // Calculate the width of the yellow bar based on the score\n  const widthPercentage = score / 10 * 100;\n\n  // Calculate the RGB values for the yellow color based on the score\n  const yellowColor = `rgba(${255 - score * 10}, ${255 - score * 10}, 0, 1)`;\n\n  // Inline style for the background color of the guess\n  const guessStyle = {\n    backgroundImage: `linear-gradient(to right, ${yellowColor}, ${yellowColor})`,\n    // Gradient for the yellow color\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '5px',\n    // Adjust padding as needed\n    marginBottom: '5px',\n    // Adjust margin as needed\n    border: `1px solid ${score === 1 ? '#000' : 'transparent'}`,\n    // Add border for the lowest score\n    borderRadius: '3px' // Add border radius for a smoother look\n  };\n\n  // Inline style for the yellow bar\n  const barStyle = {\n    width: `${widthPercentage}%`,\n    height: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess\",\n    style: guessStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"guess-word\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yellow-bar\",\n      style: barStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"score\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Guess;\nexport default Guess;\nvar _c;\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Guess","word","score","widthPercentage","yellowColor","guessStyle","backgroundImage","display","justifyContent","alignItems","padding","marginBottom","border","borderRadius","barStyle","width","height","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/youne/OneDrive/Bureau/Random Projects/contexto-react/src/Guess.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Guess({ word, score }) {\r\n  // Calculate the width of the yellow bar based on the score\r\n  const widthPercentage = (score / 10) * 100;\r\n\r\n  // Calculate the RGB values for the yellow color based on the score\r\n  const yellowColor = `rgba(${255 - score * 10}, ${255 - score * 10}, 0, 1)`;\r\n\r\n  // Inline style for the background color of the guess\r\n  const guessStyle = {\r\n    backgroundImage: `linear-gradient(to right, ${yellowColor}, ${yellowColor})`, // Gradient for the yellow color\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '5px', // Adjust padding as needed\r\n    marginBottom: '5px', // Adjust margin as needed\r\n    border: `1px solid ${score === 1 ? '#000' : 'transparent'}`, // Add border for the lowest score\r\n    borderRadius: '3px', // Add border radius for a smoother look\r\n  };\r\n\r\n  // Inline style for the yellow bar\r\n  const barStyle = {\r\n    width: `${widthPercentage}%`,\r\n    height: '100%',\r\n  };\r\n\r\n  return (\r\n    <div className=\"guess\" style={guessStyle}>\r\n      <span className=\"guess-word\">{word}</span>\r\n      <div className=\"yellow-bar\" style={barStyle}></div>\r\n      <span className=\"score\">{score}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Guess;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAC9B;EACA,MAAMC,eAAe,GAAID,KAAK,GAAG,EAAE,GAAI,GAAG;;EAE1C;EACA,MAAME,WAAW,GAAI,QAAO,GAAG,GAAGF,KAAK,GAAG,EAAG,KAAI,GAAG,GAAGA,KAAK,GAAG,EAAG,SAAQ;;EAE1E;EACA,MAAMG,UAAU,GAAG;IACjBC,eAAe,EAAG,6BAA4BF,WAAY,KAAIA,WAAY,GAAE;IAAE;IAC9EG,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,KAAK;IAAE;IAChBC,YAAY,EAAE,KAAK;IAAE;IACrBC,MAAM,EAAG,aAAYV,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,aAAc,EAAC;IAAE;IAC7DW,YAAY,EAAE,KAAK,CAAE;EACvB,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAG,GAAEZ,eAAgB,GAAE;IAC5Ba,MAAM,EAAE;EACV,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAACC,KAAK,EAAEb,UAAW;IAAAc,QAAA,gBACvCpB,OAAA;MAAMkB,SAAS,EAAC,YAAY;MAAAE,QAAA,EAAElB;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CxB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAACC,KAAK,EAAEJ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnDxB,OAAA;MAAMkB,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACC,EAAA,GAhCQxB,KAAK;AAkCd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}